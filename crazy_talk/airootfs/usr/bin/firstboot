#!/bin/env bash
###############################################################################################################################################################################################################
umask 077
###############################################################################################################################################################################################################
clear;cat /etc/banner
while [[ ! -b /dev/archiso1 && ! -b /dev/archiso2 && ! -b /dev/archiso3 ]];do
  read -p "plugin usb... (hit enter)"
  if [[ ! -b /dev/archiso1 && ! -b /dev/archiso2 && ! -b /dev/archiso3 ]];then clear;cat /etc/banner;echo "device /dev/archiso does not exist... ";fi
done
###############################################################################################################################################################################################################
if [[ ${USER} == "root" ]];then
if [[ $(mount | grep "/tmp/mount ") ]];then echo "something already mounted on /tmp/mount...";exit;fi
rm -r /tmp/mount;mkdir /tmp/mount
rm -r /tmp/user; mkdir /tmp/user
mount -o ro,noload,noexec,nosuid,nodev,noatime /dev/archiso2 /tmp/mount
###############################################################################################################################################################################################################
cp -ar /tmp/mount/user/* /tmp/user/
read -rp "enter pin: " user
gpg --homedir /tmp/user --passphrase-fd 0 -d /tmp/mount/trigger.asc <<< $(dd if=/dev/archiso3 bs=1 count=100 ibs=1 skip=${user} 2>/dev/null)
###############################################################################################################################################################################################################
echo -e "Server Certificate Uptime\n1 - 1 hour\n2 - 1 day\n3 - 1 week\n4 - 1 month\n5 - 1 year\n"
while [[ ${toggle} != @("1"|"2"|"3"|"4"|"5") ]];do read -p "input: " toggle;done
if [[ ${toggle} == "1" ]];then timestamp="+1h";fi
if [[ ${toggle} == "2" ]];then timestamp="+1d";fi
if [[ ${toggle} == "3" ]];then timestamp="+1w";fi
if [[ ${toggle} == "4" ]];then timestamp="+4w";fi
if [[ ${toggle} == "5" ]];then timestamp="+52w";fi
unset toggle
echo "$(gpg --homedir /tmp/user -d /tmp/mount/sshd/server_ca.asc 2>/dev/null)"|
ssh-keygen -s /dev/stdin -I server_ca -h -n crazy_talk -V ${timestamp} /home/user/sshd/ssh_host_rsa_key.pub
###############################################################################################################################################################################################################
echo -e "Client Certificate Uptime\n1 - 1 hour\n2 - 1 day\n3 - 1 week\n4 - 1 month\n5 - 1 year\n"
while [[ ${toggle} != @("1"|"2"|"3"|"4"|"5") ]];do read -p "input: " toggle;done
if [[ ${toggle} == "1" ]];then timestamp="+1h";fi
if [[ ${toggle} == "2" ]];then timestamp="+1d";fi
if [[ ${toggle} == "3" ]];then timestamp="+1w";fi
if [[ ${toggle} == "4" ]];then timestamp="+4w";fi
if [[ ${toggle} == "5" ]];then timestamp="+52w";fi
unset toggle
echo "$(gpg --homedir /tmp/user -d /tmp/mount/sshd/client_ca.asc 2>/dev/null)"|
ssh-keygen -s /dev/stdin -I user -n user -V ${timestamp} /home/user/ssh/id_rsa.pub
###############################################################################################################################################################################################################
cp /tmp/mount/sshd/known_hosts    /home/user/ssh/
cp /tmp/mount/root.public         /home/user/
cp /tmp/mount/user.public         /home/user/persistent.public
cp /tmp/mount/user.sig            /home/user/persistent.sig
cp /tmp/mount/sshd/server_ca.pub  /home/user/ssh/
cp /tmp/mount/sshd/client_ca.pub  /home/user/sshd/
gpg --homedir /tmp/user --output /home/user/user.sig --sign /home/user/user.public
# set perms
chown -R user:lulz /home/user/
chmod -R 700 /home/user/

# sync umount rmdir cleanup
sync
umount /tmp/mount
rmdir  /tmp/mount
rm -r  /tmp/user
pkill gpg-agent
###############################################################################################################################################################################################################
elif [[ ${USER} == "user" ]];then echo "unlucky...";fi
###############################################################################################################################################################################################################
