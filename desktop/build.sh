!/bin/env bash
###############################################################################################################################################################################################################
dev=${1}
boot=${dev}1
keys=${dev}2
random=${dev}3
###############################################################################################################################################################################################################
clear;cat /etc/banner
mkdir -p ./rootfs/boot
mkdir -p ./mount/
###############################################################################################################################################################################################################
if [[ ! -b ${1} ]];then echo "${dev} doesnt exist...";fi
if [[ ${dev: -1} == [0-9] ]];then echo "takes device not partition...";exit;fi
lsblk;unset input
while [[ ${input} != @("y"|"n") ]];do read -r -p "about to mkfs.vfat ${boot}  continue (y/n)?" input;done
if [[ ${input} == "n" ]];then clear;cat /etc/banner;echo "learn to fuck up less...";exit;fi
###############################################################################################################################################################################################################
mkfs.vfat -F32 ${boot}
###############################################################################################################################################################################################################
pacstrap -C ./pacman.conf -cGMd ./rootfs $(for i in $(cat packages);do if [[ ! $(grep "#" <<< ${i}) ]];then echo -n "${i} " ;fi;done)
cp -arfv airootfs/* rootfs/
###############################################################################################################################################################################################################
mount ${boot} ./mount
mv ./rootfs/boot/* ./mount/
umount ./mount/
###############################################################################################################################################################################################################
arch-chroot ./rootfs /root/install.sh ${dev}
###############################################################################################################################################################################################################
idproduct=$(udevadm info ${dev} | grep -e ID_MODEL_ID | sed 's/E: ID_MODEL_ID=//')
idvendor=$(udevadm info ${dev} | grep -e ID_VENDOR_ID | sed 's/E: ID_VENDOR_ID=//')
iserial=$(udevadm info ${dev} | grep -e ID_SERIAL_SHORT | sed 's/E: ID_SERIAL_SHORT=//')
sed -i -e "s/IDVENDOR/${idvendor}/" -e "s/IDPRODUCT/${idproduct}/" -e "s/SERIAL/${iserial}/" ./rootfs/root/09-gnupg.rules
###############################################################################################################################################################################################################
if [[ $(ls ./rootfs/root/packages) != "" ]];then
  for i in $(ls ./rootfs/root/packages/);do
    pacman -r ./rootfs -U ./rootfs/root/packages/${i}
  done
fi
mount ${boot} ./mount
mksquashfs ./rootfs ./mount/rootfs.squashfs
umount ./mount
echo " quick and dirty... "
umount ./rootfs/* 2>/dev/null # incase arch-chroot doesnt shut properly
rm -r ./rootfs/*
###############################################################################################################################################################################################################
