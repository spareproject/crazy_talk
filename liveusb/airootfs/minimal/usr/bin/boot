#!/bin/env bash
###############################################################################################################################################################################################################
if [[ $# != 2 ]];then echo -e "${0} - help\narg0 - rawfs name\narg1 - bridge name";exit;fi
###############################################################################################################################################################################################################
if [[ ! -d /mnt/mount/${1} ]];then echo "/mnt/mount/${1} doesnt exist...";exit;fi
if [[ ! $(mount | grep "/mnt/mount/${1} ") ]];then echo "mapped device isnt mounted ... ";exit;fi
###############################################################################################################################################################################################################
caps="CAP_CHOWN,CAP_DAC_OVERRIDE,CAP_DAC_READ_SEARCH,CAP_FOWNER,CAP_FSETID,CAP_IPC_OWNER,CAP_KILL,CAP_LEASE,CAP_LINUX_IMMUTABLE,CAP_NET_BIND_SERVICE,CAP_NET_BROADCAST,CAP_NET_RAW,CAP_SETGID,CAP_SETFCAP,CAP_SETPCAP,CAP_SETUID,CAP_SYS_ADMIN,CAP_SYS_CHROOT,CAP_SYS_NICE,CAP_SYS_PTRACE,CAP_SYS_TTY_CONFIG,CAP_SYS_RESOURCE,CAP_SYS_BOOT,CAP_AUDIT_WRITE,CAP_AUDIT_CONTROL"
(/usr/bin/systemd-nspawn --quiet --boot --network-bridge ${2} --directory /mnt/mount/${1} --drop-capability=${caps} &>/dev/null &)&
###############################################################################################################################################################################################################

# either random generate gnupg and openssh on every boot from here
# sign keys with ? container root and container openssl server and client certificate authority
# need to use it first and find my usecase cluster signing
cat /home/user/ssh/id_rsa.pub > /mnt/mount/${1}/home/user/ssh/authorized_keys

###############################################################################################################################################################################################################
for i in $(ls /mnt/mount);do if [[ ! $(mount | grep ${i}) ]];then rmdir /mnt/mount/${i};fi;done
###############################################################################################################################################################################################################
