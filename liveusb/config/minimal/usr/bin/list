#!/bin/env bash
###############################################################################################################################################################################################################
clear;cat /etc/banner
echo "########################################################################################################################################################################################################"
echo " [firstboot|oneshot] [setup|unlock|lock] [create] [open|close] [unionfs] [install|wipe] [start|stop|restart] [query] [delete] [list] [poweroff] [rdp]"
echo "########################################################################################################################################################################################################"

if [[ -f /home/user/openssh/ssh/id_rsa.pub ]];then
echo " [ firstboot ]"
else
echo " [ no firstboot ] "
fi

if [[ -f /home/user/gnupg/unlocked ]];then
echo " [ oneshot ]"
else
echo " [ no oneshot]"
fi

if [[ $(mount|grep "/mnt/internal ") ]];then
echo " [ unlocked ]"
else
echo " [ locked ]"
fi
if [[ $(mount|grep '/var/cache/pacman/pkg ') ]];then
echo " [ pacman-init ]"
else
echo " [ no pacman ]"
fi
###############################################################################################################################################################################################################
echo "########################################################################################################################################################################################################"
###############################################################################################################################################################################################################

# rawfs
###############################################################################################################################################################################################################
for i in $(ls /mnt/rawfs/);do 
OUTPUT+="[ ${i} $(du -sh /mnt/rawfs/${i}|awk '{print$1}') ] - "
if [[ -f /mnt/luks/${i} ]];then OUTPUT+="[ key ] ";fi
if [[ -b /dev/mapper/${i} ]];then OUTPUT+="[ mapped ] ";fi
if [[ $(mount | grep "/mnt/mount/${i} ") ]];then OUTPUT+="[ mounted ] ";fi
if [[ $(machinectl|grep "^${i} ") ]];then OUTPUT+="[ boot ] ";fi
OUTPUT+="\n"
done
echo -e $OUTPUT|column -t
###############################################################################################################################################################################################################
echo "########################################################################################################################################################################################################"

# unionfs
###############################################################################################################################################################################################################
unset OUTPUT
for i in $(mount | grep unionfs | awk '{print $3}');do
OUTPUT+="[ ${i#/mnt/mount/} ] - [ mounted ] "
if [[ $(machinectl | grep "^${i#/mnt/mount/} ") ]];then OUTPUT+="[ boot ] ";fi
OUTPUT+="\n"
done
echo -e $OUTPUT | column -t
###############################################################################################################################################################################################################
echo "########################################################################################################################################################################################################"

# /mnt/mount/.overlayfs
###############################################################################################################################################################################################################
unset OUTPUT
for i in /mnt/mount/.overlayfs/*;do
if [[ $i != '/mnt/mount/.overlayfs/*' ]];then
  OUTPUT+="${i##/mnt/mount/.overlayfs/} "
  OUTPUT+="$(du -sh $i|awk '{print $1}')"
  OUTPUT+="\n"
fi
done
echo -e $OUTPUT | column -t
###############################################################################################################################################################################################################
echo "########################################################################################################################################################################################################"
if [[ -f /home/user/host.txt ]];then cat /home/user/host.txt;fi
echo "########################################################################################################################################################################################################"
###############################################################################################################################################################################################################
for i in /mnt/mount/*;do if [[ $i != '/mnt/mount/*' && ! $(mount|grep "${i} ") ]];then rmdir "${i}";fi;done
###############################################################################################################################################################################################################
