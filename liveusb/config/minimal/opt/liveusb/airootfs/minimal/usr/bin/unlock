#!/bin/env bash
###############################################################################################################################################################################################################

# gpg-agent not running, persistent empty exit
if [[ ! $(ps aux|grep gpg-agent|grep /home/user/gnupg/persistent) || $(ls /home/user/gnupg/persistent) == "" ]];then echo "gnupg not loaded";exit;fi

# luks or rawfs doesnt exist exit
if [[ ! -f "/mnt/$(blkid /dev/archiso2 -s PARTUUID -o value).luks" || ! -f "/mnt/$(blkid /dev/archiso2 -s PARTUUID -o value).rawfs" ]];then echo "does not exist...";exit;fi

###############################################################################################################################################################################################################

# if trigger


mkdir -p /mnt/internal

gpg --homedir /home/user/gnupg/persistent -d /mnt/$(blkid /dev/archiso2 -s PARTUUID -o value).luks 2>/dev/null|
cryptsetup --cipher aes-xts-plain64 --key-size 512 --hash sha512 --iter-time 5000 --key-file - --type=plain --offset 0 open /mnt/$(blkid /dev/archiso2 -s PARTUUID -o value).rawfs internal

mount /dev/mapper/internal /mnt/internal

###############################################################################################################################################################################################################

# everything under this point should probably be removed... such netcat much ports very security
# its pretty much a host backdoor so i can debug and dev containers... 
umask 077

# create the tmpfs...
mkdir -p /mnt/tmpfs
mount -t tmpfs tmpfs /mnt/tmpfs

mkfifo /mnt/tmpfs/ip.socket
touch /mnt/tmpfs/ip.txt
mkdir /mnt/tmpfs/user

cp /etc/key/gnupg/gpg* /mnt/tmpfs/user

# create the random number generated key for networking...
gpg --homedir /mnt/tmpfs/user --passphrase-fd 0 --gen-key --batch /etc/key/gnupg/batch.user <<< "" 2>/dev/null
gpg --homedir /mnt/tmpfs/user --output /mnt/tmpfs/user.public --export user 2>/dev/null

# copy over all the public keys associated with the internal keyset
cp /mnt/internal/gnupg/persistent.public /mnt/tmpfs/
cp /mnt/internal/gnupg/persistent.sig    /mnt/tmpfs/
cp /mnt/internal/gnupg/revoke.public     /mnt/tmpfs/
cp /mnt/internal/gnupg/root.public       /mnt/tmpfs/

cp /mnt/internal/gnupg/persistent.host.public /mnt/tmpfs/
cp /mnt/internal/gnupg/revoke.host.public     /mnt/tmpfs/
cp /mnt/internal/gnupg/root.host.public       /mnt/tmpfs/

# import and sign all the public keys associated with the internal keyset
gpg --homedir /mnt/tmpfs/user --import /mnt/tmpfs/persistent.public
gpg --homedir /mnt/tmpfs/user --sign-key persistent
gpg --homedir /mnt/tmpfs/user --import /mnt/tmpfs/revoke.public
gpg --homedir /mnt/tmpfs/user --sign-key revoke
gpg --homedir /mnt/tmpfs/user --import /mnt/tmpfs/root.public
gpg --homedir /mnt/tmpfs/user --sign-key root

# still need to implement a default listener that can tr -cd a-zA-Z0-9\n after decrypting the message same style as the ip store last 10...
# ^ using it as a listener for any replies from commands sent to containers...

function listen { nc -vulnz 10.0.0.1 31279 1>/dev/null 2>/mnt/tmpfs/ip.socket; }
function socket { while true;do if read line </mnt/tmpfs/ip.socket;then line=$(echo "$line"|awk '{print $4}'|awk -F ':' '{print $1}');if [[ $(wc -l </mnt/tmpfs/ip.txt) -gt 9 ]];then sed -i 1d /mnt/tmpfs/ip.txt;fi;echo $line >> /mnt/tmpfs/ip.txt;fi;done; }
(listen &)&
(socket &)&

###############################################################################################################################################################################################################
## else trigger cleanup...


